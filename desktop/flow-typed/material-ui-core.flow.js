// /**
//  * Flowtype definitions for index
//  * Generated by Flowgen from a Typescript Definition
//  * Flowgen v1.8.0
//  * Author: [Joar Wilk](http://twitter.com/joarwilk)
//  * Repo: http://github.com/joarwilk/flowgen
//  */
//
// import * as React from "react";
// import {StyledComponentProps as RealStyledComponentProps} from "@material-ui/core/styles";
//
// declare module "@material-ui/core" {
//   declare type StyledComponentProps = RealStyledComponentProps;
//     //declare export {StyledComponentProps};
//   declare type PropsOf<C> = /* Flow doesn't support conditional types, use $Call utility type */ any;
//   /**
//    * All standard components exposed by `material-ui` are `StyledComponents` with
//    * certain `classes`, on which one can also set a top-level `className` and inline
//    * `style`.
//    */
//   declare type StandardProps<
//     C,
//     ClassKey: string,
//     Removals: $Keys<C>
//   > =
//     Omit<C, "classes" | Removals> &
//       StyledComponentProps<ClassKey> & {
//       className?: string,
//       style?: React.CSSProperties
//     };
//   declare type PaletteType = "light" | "dark";
//
//   declare type Color = {
//     50: string;
//     100: string;
//     200: string;
//     300: string;
//     400: string;
//     500: string;
//     600: string;
//     700: string;
//     800: string;
//     900: string;
//     A100: string;
//     A200: string;
//     A400: string;
//     A700: string;
//   };
//
//   /**
//    * Remove properties `K` from `T`.
//    * @internal
//    */
//   declare type Omit<T,
//     K: $Keys<T>
//     > = /* Flow doesn't support conditional types, use $Call utility type */ any;
//   /**
//    * `T extends ConsistentWith<T, U>` means that where `T` has overlapping properties with
//    * `U`, their value types do not conflict.
//    * @internal
//    */
//   declare type ConsistentWith<DecorationTargetProps, InjectedProps> = any;
//     // <P>(
//     //   P
//     // ) => /* Flow doesn't support conditional types, use $Call utility type */ any>;
//   /**
//    * a function that takes {component} and returns a component that passes along
//    * all the props to {component} except the {InjectedProps} and will accept
//    * additional {AdditionalProps}
//    */
//   declare type PropInjector<InjectedProps, AdditionalProps = {}> = <C: React.ComponentType<ConsistentWith<PropsOf<C>, InjectedProps>>>(
//     component: C
//   ) => React.ComponentType<Omit<JSX.LibraryManagedAttributes<C, PropsOf<C>>, $Keys<InjectedProps>> &
//     AdditionalProps>;
//   /**
//    * Like `T & U`, but using the value types from `U` where their properties overlap.
//    * @internal
//    */
//   declare type Overwrite<T, U> = Omit<T, $Keys<U>> & U;
//   declare type PropTypes$Alignment =
//     | "inherit"
//     | "left"
//     | "center"
//     | "right"
//     | "justify";
//
//   declare type PropTypes$Color = "inherit" | "primary" | "secondary" | "default";
//
//   declare type PropTypes$Margin = "none" | "dense" | "normal";
//   import * as colors from "./colors";
//     declare export {colors};
//     declare export {
//     createGenerateClassName,
//     createMuiTheme,
//     jssPreset,
//     MuiThemeProvider,
//     StyleRulesCallback,
//     Theme,
//     withStyles,
//     WithStyles,
//     createStyles,
//     withTheme,
//     WithTheme
//   } from "./styles";
//     declare export {default as AppBar} from "./AppBar";
//     declare export {default as Avatar} from "./Avatar";
//     declare export {default as Backdrop} from "./Backdrop";
//     declare export {default as Badge} from "./Badge";
//     declare export {default as BottomNavigation} from "./BottomNavigation";
//     declare export {
//     default as BottomNavigationAction
//   } from "./BottomNavigationAction";
//     declare export {default as Button} from "./Button";
//     declare export {default as ButtonBase} from "./ButtonBase";
//     declare export {default as Card} from "./Card";
//     declare export {default as CardActionArea} from "./CardActionArea";
//     declare export {default as CardActions} from "./CardActions";
//     declare export {default as CardContent} from "./CardContent";
//     declare export {default as CardHeader} from "./CardHeader";
//     declare export {default as CardMedia} from "./CardMedia";
//     declare export {default as Checkbox} from "./Checkbox";
//     declare export {default as Chip} from "./Chip";
//     declare export {default as CircularProgress} from "./CircularProgress";
//     declare export {default as ClickAwayListener} from "./ClickAwayListener";
//     declare export {default as Collapse} from "./Collapse";
//     declare export {default as CssBaseline} from "./CssBaseline";
//     declare export {default as Dialog} from "./Dialog";
//     declare export {default as DialogActions} from "./DialogActions";
//     declare export {default as DialogContent} from "./DialogContent";
//     declare export {default as DialogContentText} from "./DialogContentText";
//     declare export {default as DialogTitle} from "./DialogTitle";
//     declare export {default as Divider} from "./Divider";
//     declare export {default as Drawer} from "./Drawer";
//     declare export {default as ExpansionPanel} from "./ExpansionPanel";
//     declare export {
//     default as ExpansionPanelActions
//   } from "./ExpansionPanelActions";
//     declare export {
//     default as ExpansionPanelDetails
//   } from "./ExpansionPanelDetails";
//     declare export {
//     default as ExpansionPanelSummary
//   } from "./ExpansionPanelSummary";
//     declare export {default as Fab} from "./Fab";
//     declare export {default as Fade} from "./Fade";
//     declare export {default as FilledInput} from "./FilledInput";
//     declare export {default as FormControl} from "./FormControl";
//     declare export {default as FormControlLabel} from "./FormControlLabel";
//     declare export {default as FormGroup} from "./FormGroup";
//     declare export {default as FormHelperText} from "./FormHelperText";
//     declare export {default as FormLabel} from "./FormLabel";
//     declare export {default as Grid} from "./Grid";
//     declare export {default as GridList} from "./GridList";
//     declare export {default as GridListTile} from "./GridListTile";
//     declare export {default as GridListTileBar} from "./GridListTileBar";
//     declare export {default as Grow} from "./Grow";
//     declare export {default as Hidden} from "./Hidden";
//     declare export {default as Icon} from "./Icon";
//     declare export {default as IconButton} from "./IconButton";
//     declare export {default as Input} from "./Input";
//     declare export {default as InputAdornment} from "./InputAdornment";
//     declare export {default as InputBase} from "./InputBase";
//     declare export {default as InputLabel} from "./InputLabel";
//     declare export {default as LinearProgress} from "./LinearProgress";
//     declare export {default as Link} from "./Link";
//     declare export {default as List} from "./List";
//     declare export {default as ListItem} from "./ListItem";
//     declare export {default as ListItemAvatar} from "./ListItemAvatar";
//     declare export {default as ListItemIcon} from "./ListItemIcon";
//     declare export {
//     default as ListItemSecondaryAction
//   } from "./ListItemSecondaryAction";
//     declare export {default as ListItemText} from "./ListItemText";
//     declare export {default as ListSubheader} from "./ListSubheader";
//     declare export {default as Menu} from "./Menu";
//     declare export {default as MenuItem} from "./MenuItem";
//     declare export {default as MenuList} from "./MenuList";
//     declare export {default as MobileStepper} from "./MobileStepper";
//     declare export {default as Modal, ModalManager} from "./Modal";
//     declare export {default as NativeSelect} from "./NativeSelect";
//     declare export {default as NoSsr} from "./NoSsr";
//     declare export {default as OutlinedInput} from "./OutlinedInput";
//     declare export {default as Paper} from "./Paper";
//     declare export {default as Popover} from "./Popover";
//     declare export {default as Popper} from "./Popper";
//     declare export {default as Portal} from "./Portal";
//     declare export {default as Radio} from "./Radio";
//     declare export {default as RadioGroup} from "./RadioGroup";
//     declare export {default as RootRef} from "./RootRef";
//     declare export {default as Select} from "./Select";
//     declare export {default as Slide} from "./Slide";
//     declare export {default as Snackbar} from "./Snackbar";
//     declare export {default as SnackbarContent} from "./SnackbarContent";
//     declare export {default as Step} from "./Step";
//     declare export {default as StepButton} from "./StepButton";
//     declare export {default as StepConnector} from "./StepConnector";
//     declare export {default as StepContent} from "./StepContent";
//     declare export {default as StepIcon} from "./StepIcon";
//     declare export {default as StepLabel} from "./StepLabel";
//     declare export {default as Stepper} from "./Stepper";
//     declare export {default as SvgIcon} from "./SvgIcon";
//     declare export {default as SwipeableDrawer} from "./SwipeableDrawer";
//     declare export {default as Switch} from "./Switch";
//     declare export {default as Tab} from "./Tab";
//     declare export {default as Table} from "./Table";
//     declare export {default as TableBody} from "./TableBody";
//     declare export {default as TableCell} from "./TableCell";
//     declare export {default as TableFooter} from "./TableFooter";
//     declare export {default as TableHead} from "./TableHead";
//     declare export {default as TablePagination} from "./TablePagination";
//     declare export {default as TableRow} from "./TableRow";
//     declare export {default as TableSortLabel} from "./TableSortLabel";
//     declare export {default as Tabs} from "./Tabs";
//     declare export {default as TextField} from "./TextField";
//     declare export {default as Toolbar} from "./Toolbar";
//     declare export {default as Tooltip} from "./Tooltip";
//     declare export {default as Typography} from "./Typography";
//     declare export {default as withMobileDialog} from "./withMobileDialog";
//     declare export {default as withWidth} from "./withWidth";
//     declare export {default as Zoom} from "./Zoom";
// };
